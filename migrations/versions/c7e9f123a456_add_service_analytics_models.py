"""Add service analytics models

Revision ID: c7e9f123a456
Revises: 8b772bffd5ee
Create Date: 2024-12-27 12:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c7e9f123a456'
down_revision = '8b772bffd5ee'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create service_analytics_events table
    op.create_table('service_analytics_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('event_category', sa.String(), nullable=False),
    sa.Column('installation_job_id', sa.Integer(), nullable=True),
    sa.Column('technician_id', sa.Integer(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('completion_record_id', sa.Integer(), nullable=True),
    sa.Column('feedback_id', sa.Integer(), nullable=True),
    sa.Column('event_data', sa.JSON(), nullable=True),
    sa.Column('metric_value', sa.Float(), nullable=True),
    sa.Column('event_timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['completion_record_id'], ['completion_records.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['feedback_id'], ['customer_feedback.id'], ),
    sa.ForeignKeyConstraint(['installation_job_id'], ['installation_jobs.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['technician_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    with op.batch_alter_table('service_analytics_events', schema=None) as batch_op:
        batch_op.create_index('idx_analytics_event_customer', ['customer_id'], unique=False)
        batch_op.create_index('idx_analytics_event_job', ['installation_job_id'], unique=False)
        batch_op.create_index('idx_analytics_event_org_category', ['organization_id', 'event_category'], unique=False)
        batch_op.create_index('idx_analytics_event_org_type', ['organization_id', 'event_type'], unique=False)
        batch_op.create_index('idx_analytics_event_technician', ['technician_id'], unique=False)
        batch_op.create_index('idx_analytics_event_timestamp', ['event_timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_service_analytics_events_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_service_analytics_events_organization_id'), ['organization_id'], unique=False)

    # Create report_configurations table
    op.create_table('report_configurations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('metric_types', sa.JSON(), nullable=False),
    sa.Column('default_filters', sa.JSON(), nullable=True),
    sa.Column('schedule_enabled', sa.Boolean(), nullable=True),
    sa.Column('schedule_frequency', sa.String(), nullable=True),
    sa.Column('schedule_time', sa.String(), nullable=True),
    sa.Column('schedule_day_of_week', sa.Integer(), nullable=True),
    sa.Column('schedule_day_of_month', sa.Integer(), nullable=True),
    sa.Column('email_recipients', sa.JSON(), nullable=True),
    sa.Column('email_subject_template', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_generated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('next_generation_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'name', name='uq_report_config_org_name')
    )
    
    with op.batch_alter_table('report_configurations', schema=None) as batch_op:
        batch_op.create_index('idx_report_config_created_by', ['created_by_id'], unique=False)
        batch_op.create_index('idx_report_config_org_active', ['organization_id', 'is_active'], unique=False)
        batch_op.create_index('idx_report_config_schedule', ['schedule_enabled', 'next_generation_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_report_configurations_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_report_configurations_organization_id'), ['organization_id'], unique=False)

    # Create analytics_summaries table
    op.create_table('analytics_summaries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('summary_type', sa.String(), nullable=False),
    sa.Column('summary_date', sa.Date(), nullable=False),
    sa.Column('total_jobs', sa.Integer(), nullable=True),
    sa.Column('completed_jobs', sa.Integer(), nullable=True),
    sa.Column('pending_jobs', sa.Integer(), nullable=True),
    sa.Column('cancelled_jobs', sa.Integer(), nullable=True),
    sa.Column('total_completion_time_hours', sa.Float(), nullable=True),
    sa.Column('average_completion_time_hours', sa.Float(), nullable=True),
    sa.Column('total_feedback_received', sa.Integer(), nullable=True),
    sa.Column('average_overall_rating', sa.Float(), nullable=True),
    sa.Column('average_service_quality', sa.Float(), nullable=True),
    sa.Column('average_technician_rating', sa.Float(), nullable=True),
    sa.Column('sla_met_count', sa.Integer(), nullable=True),
    sa.Column('sla_breached_count', sa.Integer(), nullable=True),
    sa.Column('sla_compliance_rate', sa.Float(), nullable=True),
    sa.Column('technician_id', sa.Integer(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('additional_metrics', sa.JSON(), nullable=True),
    sa.Column('calculated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['technician_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'summary_type', 'summary_date', 'technician_id', 'customer_id', name='uq_analytics_summary_unique')
    )
    
    with op.batch_alter_table('analytics_summaries', schema=None) as batch_op:
        batch_op.create_index('idx_analytics_summary_calculated_at', ['calculated_at'], unique=False)
        batch_op.create_index('idx_analytics_summary_customer', ['customer_id'], unique=False)
        batch_op.create_index('idx_analytics_summary_org_type_date', ['organization_id', 'summary_type', 'summary_date'], unique=False)
        batch_op.create_index('idx_analytics_summary_technician', ['technician_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_analytics_summaries_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_analytics_summaries_organization_id'), ['organization_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop analytics_summaries table
    op.drop_table('analytics_summaries')
    
    # Drop report_configurations table
    op.drop_table('report_configurations')
    
    # Drop service_analytics_events table
    op.drop_table('service_analytics_events')
    
    # ### end Alembic commands ###