"""Add inventory and parts management models

Revision ID: 65386d18e079
Revises: c7e9f123a456
Create Date: 2025-08-23 14:23:55.939907

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '65386d18e079'
down_revision = 'c7e9f123a456'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('inventory_alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('alert_type', sa.String(), nullable=False),
    sa.Column('current_stock', sa.Float(), nullable=False),
    sa.Column('reorder_level', sa.Float(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('priority', sa.String(), nullable=False),
    sa.Column('acknowledged_by_id', sa.Integer(), nullable=True),
    sa.Column('acknowledged_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('suggested_order_quantity', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['acknowledged_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('inventory_alerts', schema=None) as batch_op:
        batch_op.create_index('idx_inventory_alert_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_inventory_alert_org_priority', ['organization_id', 'priority'], unique=False)
        batch_op.create_index('idx_inventory_alert_org_product', ['organization_id', 'product_id'], unique=False)
        batch_op.create_index('idx_inventory_alert_org_status', ['organization_id', 'status'], unique=False)
        batch_op.create_index('idx_inventory_alert_type', ['alert_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_inventory_alerts_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_inventory_alerts_organization_id'), ['organization_id'], unique=False)

    op.create_table('inventory_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('transaction_type', sa.String(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('reference_type', sa.String(), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('reference_number', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('stock_before', sa.Float(), nullable=False),
    sa.Column('stock_after', sa.Float(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('transaction_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('inventory_transactions', schema=None) as batch_op:
        batch_op.create_index('idx_inventory_transaction_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_inventory_transaction_org_date', ['organization_id', 'transaction_date'], unique=False)
        batch_op.create_index('idx_inventory_transaction_org_product', ['organization_id', 'product_id'], unique=False)
        batch_op.create_index('idx_inventory_transaction_org_type', ['organization_id', 'transaction_type'], unique=False)
        batch_op.create_index('idx_inventory_transaction_reference', ['reference_type', 'reference_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_inventory_transactions_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_inventory_transactions_organization_id'), ['organization_id'], unique=False)

    op.create_table('job_parts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity_required', sa.Float(), nullable=False),
    sa.Column('quantity_used', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('location_used', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('allocated_by_id', sa.Integer(), nullable=True),
    sa.Column('used_by_id', sa.Integer(), nullable=True),
    sa.Column('allocated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['allocated_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['job_id'], ['installation_jobs.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['used_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('job_id', 'product_id', name='uq_job_parts_job_product')
    )
    with op.batch_alter_table('job_parts', schema=None) as batch_op:
        batch_op.create_index('idx_job_parts_org_job', ['organization_id', 'job_id'], unique=False)
        batch_op.create_index('idx_job_parts_org_product', ['organization_id', 'product_id'], unique=False)
        batch_op.create_index('idx_job_parts_org_status', ['organization_id', 'status'], unique=False)
        batch_op.create_index('idx_job_parts_used_at', ['used_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_parts_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_parts_organization_id'), ['organization_id'], unique=False)

    with op.batch_alter_table('analytics_summaries', schema=None) as batch_op:
        batch_op.alter_column('total_jobs',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('completed_jobs',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('pending_jobs',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('cancelled_jobs',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('total_feedback_received',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('sla_met_count',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('sla_breached_count',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_index(batch_op.f('ix_analytics_summaries_summary_date'), ['summary_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_analytics_summaries_summary_type'), ['summary_type'], unique=False)

    with op.batch_alter_table('report_configurations', schema=None) as batch_op:
        batch_op.alter_column('schedule_enabled',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)

    with op.batch_alter_table('service_analytics_events', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_service_analytics_events_event_category'), ['event_category'], unique=False)
        batch_op.create_index(batch_op.f('ix_service_analytics_events_event_timestamp'), ['event_timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_service_analytics_events_event_type'), ['event_type'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('service_analytics_events', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_service_analytics_events_event_type'))
        batch_op.drop_index(batch_op.f('ix_service_analytics_events_event_timestamp'))
        batch_op.drop_index(batch_op.f('ix_service_analytics_events_event_category'))

    with op.batch_alter_table('report_configurations', schema=None) as batch_op:
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('schedule_enabled',
               existing_type=sa.BOOLEAN(),
               nullable=True)

    with op.batch_alter_table('analytics_summaries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_analytics_summaries_summary_type'))
        batch_op.drop_index(batch_op.f('ix_analytics_summaries_summary_date'))
        batch_op.alter_column('sla_breached_count',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('sla_met_count',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('total_feedback_received',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('cancelled_jobs',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('pending_jobs',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('completed_jobs',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('total_jobs',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('job_parts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_job_parts_organization_id'))
        batch_op.drop_index(batch_op.f('ix_job_parts_id'))
        batch_op.drop_index('idx_job_parts_used_at')
        batch_op.drop_index('idx_job_parts_org_status')
        batch_op.drop_index('idx_job_parts_org_product')
        batch_op.drop_index('idx_job_parts_org_job')

    op.drop_table('job_parts')
    with op.batch_alter_table('inventory_transactions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_inventory_transactions_organization_id'))
        batch_op.drop_index(batch_op.f('ix_inventory_transactions_id'))
        batch_op.drop_index('idx_inventory_transaction_reference')
        batch_op.drop_index('idx_inventory_transaction_org_type')
        batch_op.drop_index('idx_inventory_transaction_org_product')
        batch_op.drop_index('idx_inventory_transaction_org_date')
        batch_op.drop_index('idx_inventory_transaction_created_at')

    op.drop_table('inventory_transactions')
    with op.batch_alter_table('inventory_alerts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_inventory_alerts_organization_id'))
        batch_op.drop_index(batch_op.f('ix_inventory_alerts_id'))
        batch_op.drop_index('idx_inventory_alert_type')
        batch_op.drop_index('idx_inventory_alert_org_status')
        batch_op.drop_index('idx_inventory_alert_org_product')
        batch_op.drop_index('idx_inventory_alert_org_priority')
        batch_op.drop_index('idx_inventory_alert_created_at')

    op.drop_table('inventory_alerts')
    # ### end Alembic commands ###