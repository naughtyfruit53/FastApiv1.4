"""Initial migration with SLA models

Revision ID: 2d5258bc4090
Revises: 
Create Date: 2025-08-23 09:26:54.667392

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2d5258bc4090'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('subdomain', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('business_type', sa.String(), nullable=True),
    sa.Column('industry', sa.String(), nullable=True),
    sa.Column('website', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('primary_email', sa.String(), nullable=False),
    sa.Column('primary_phone', sa.String(), nullable=False),
    sa.Column('address1', sa.String(), nullable=False),
    sa.Column('address2', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('pin_code', sa.String(), nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('state_code', sa.String(), nullable=True),
    sa.Column('gst_number', sa.String(), nullable=True),
    sa.Column('pan_number', sa.String(), nullable=True),
    sa.Column('cin_number', sa.String(), nullable=True),
    sa.Column('plan_type', sa.String(), nullable=False),
    sa.Column('max_users', sa.Integer(), nullable=False),
    sa.Column('storage_limit_gb', sa.Integer(), nullable=False),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.Column('timezone', sa.String(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('date_format', sa.String(), nullable=False),
    sa.Column('financial_year_start', sa.String(), nullable=False),
    sa.Column('company_details_completed', sa.Boolean(), nullable=False),
    sa.Column('org_code', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('organizations', schema=None) as batch_op:
        batch_op.create_index('idx_org_status_subdomain', ['status', 'subdomain'], unique=False)
        batch_op.create_index(batch_op.f('ix_organizations_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_organizations_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_organizations_org_code'), ['org_code'], unique=True)
        batch_op.create_index(batch_op.f('ix_organizations_subdomain'), ['subdomain'], unique=True)

    op.create_table('otp_verifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('otp_hash', sa.String(), nullable=False),
    sa.Column('purpose', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=False),
    sa.Column('used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('attempts', sa.Integer(), nullable=False),
    sa.Column('max_attempts', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('otp_verifications', schema=None) as batch_op:
        batch_op.create_index('idx_otp_email_purpose', ['email', 'purpose'], unique=False)
        batch_op.create_index('idx_otp_expires', ['expires_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_otp_verifications_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_otp_verifications_id'), ['id'], unique=False)

    op.create_table('platform_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('temp_password_hash', sa.String(), nullable=True),
    sa.Column('temp_password_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('force_password_reset', sa.Boolean(), nullable=False),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
    sa.Column('locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('platform_users', schema=None) as batch_op:
        batch_op.create_index('idx_platform_user_active', ['is_active'], unique=False)
        batch_op.create_index('idx_platform_user_email', ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_platform_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_platform_users_id'), ['id'], unique=False)

    op.create_table('service_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('module', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('service_permissions', schema=None) as batch_op:
        batch_op.create_index('idx_service_permission_module_action', ['module', 'action'], unique=False)
        batch_op.create_index(batch_op.f('ix_service_permissions_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_service_permissions_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_service_permissions_module'), ['module'], unique=False)
        batch_op.create_index(batch_op.f('ix_service_permissions_name'), ['name'], unique=True)

    op.create_table('companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address1', sa.String(), nullable=False),
    sa.Column('address2', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('pin_code', sa.String(), nullable=False),
    sa.Column('state_code', sa.String(), nullable=False),
    sa.Column('gst_number', sa.String(), nullable=True),
    sa.Column('pan_number', sa.String(), nullable=True),
    sa.Column('contact_number', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('logo_path', sa.String(), nullable=True),
    sa.Column('business_type', sa.String(), nullable=True),
    sa.Column('industry', sa.String(), nullable=True),
    sa.Column('website', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.create_index('idx_company_org_name', ['organization_id', 'name'], unique=False)
        batch_op.create_index(batch_op.f('ix_companies_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_companies_organization_id'), ['organization_id'], unique=False)

    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('contact_number', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('address1', sa.String(), nullable=False),
    sa.Column('address2', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('pin_code', sa.String(), nullable=False),
    sa.Column('state_code', sa.String(), nullable=False),
    sa.Column('gst_number', sa.String(), nullable=True),
    sa.Column('pan_number', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'name', name='uq_customer_org_name')
    )
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.create_index('idx_customer_org_active', ['organization_id', 'is_active'], unique=False)
        batch_op.create_index('idx_customer_org_name', ['organization_id', 'name'], unique=False)
        batch_op.create_index(batch_op.f('ix_customers_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_customers_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_customers_organization_id'), ['organization_id'], unique=False)

    op.create_table('email_notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('to_email', sa.String(), nullable=False),
    sa.Column('subject', sa.String(), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('voucher_type', sa.String(), nullable=True),
    sa.Column('voucher_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('email_notifications', schema=None) as batch_op:
        batch_op.create_index('idx_email_org_status', ['organization_id', 'status'], unique=False)
        batch_op.create_index(batch_op.f('ix_email_notifications_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_email_notifications_organization_id'), ['organization_id'], unique=False)

    op.create_table('notification_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('subject_type', sa.String(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('notification_type', sa.String(), nullable=False),
    sa.Column('channel', sa.String(), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'subject_type', 'subject_id', 'notification_type', 'channel', name='uq_notification_pref_subject_type_channel')
    )
    with op.batch_alter_table('notification_preferences', schema=None) as batch_op:
        batch_op.create_index('idx_notification_pref_org_subject', ['organization_id', 'subject_type', 'subject_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_preferences_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_preferences_organization_id'), ['organization_id'], unique=False)

    op.create_table('payment_terms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('days', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('payment_terms', schema=None) as batch_op:
        batch_op.create_index('idx_payment_term_org_name', ['organization_id', 'name'], unique=False)
        batch_op.create_index(batch_op.f('ix_payment_terms_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payment_terms_organization_id'), ['organization_id'], unique=False)

    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('hsn_code', sa.String(), nullable=True),
    sa.Column('part_number', sa.String(), nullable=True),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('gst_rate', sa.Float(), nullable=False),
    sa.Column('is_gst_inclusive', sa.Boolean(), nullable=False),
    sa.Column('reorder_level', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_manufactured', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'name', name='uq_product_org_name'),
    sa.UniqueConstraint('organization_id', 'part_number', name='uq_product_org_part_number')
    )
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.create_index('idx_product_org_active', ['organization_id', 'is_active'], unique=False)
        batch_op.create_index('idx_product_org_hsn', ['organization_id', 'hsn_code'], unique=False)
        batch_op.create_index('idx_product_org_name', ['organization_id', 'name'], unique=False)
        batch_op.create_index(batch_op.f('ix_products_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_products_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_products_organization_id'), ['organization_id'], unique=False)

    op.create_table('service_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'name', name='uq_service_role_org_name')
    )
    with op.batch_alter_table('service_roles', schema=None) as batch_op:
        batch_op.create_index('idx_service_role_org_active', ['organization_id', 'is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_service_roles_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_service_roles_organization_id'), ['organization_id'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('supabase_uuid', sa.String(), nullable=True),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('department', sa.String(), nullable=True),
    sa.Column('designation', sa.String(), nullable=True),
    sa.Column('employee_id', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_super_admin', sa.Boolean(), nullable=False),
    sa.Column('must_change_password', sa.Boolean(), nullable=False),
    sa.Column('has_stock_access', sa.Boolean(), nullable=False),
    sa.Column('temp_password_hash', sa.String(), nullable=True),
    sa.Column('temp_password_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('force_password_reset', sa.Boolean(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('avatar_path', sa.String(), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
    sa.Column('locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'email', name='uq_user_org_email'),
    sa.UniqueConstraint('organization_id', 'username', name='uq_user_org_username')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('idx_user_org_active', ['organization_id', 'is_active'], unique=False)
        batch_op.create_index('idx_user_org_email', ['organization_id', 'email'], unique=False)
        batch_op.create_index('idx_user_org_username', ['organization_id', 'username'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_supabase_uuid'), ['supabase_uuid'], unique=False)

    op.create_table('vendors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('contact_number', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('address1', sa.String(), nullable=False),
    sa.Column('address2', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('pin_code', sa.String(), nullable=False),
    sa.Column('state_code', sa.String(), nullable=False),
    sa.Column('gst_number', sa.String(), nullable=True),
    sa.Column('pan_number', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'name', name='uq_vendor_org_name')
    )
    with op.batch_alter_table('vendors', schema=None) as batch_op:
        batch_op.create_index('idx_vendor_org_active', ['organization_id', 'is_active'], unique=False)
        batch_op.create_index('idx_vendor_org_name', ['organization_id', 'name'], unique=False)
        batch_op.create_index(batch_op.f('ix_vendors_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_vendors_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_vendors_organization_id'), ['organization_id'], unique=False)

    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('table_name', sa.String(), nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('changes', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.create_index('idx_audit_org_table_action', ['organization_id', 'table_name', 'action'], unique=False)
        batch_op.create_index('idx_audit_org_timestamp', ['organization_id', 'timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_logs_organization_id'), ['organization_id'], unique=False)

    op.create_table('bill_of_materials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('bom_name', sa.String(), nullable=False),
    sa.Column('output_item_id', sa.Integer(), nullable=False),
    sa.Column('output_quantity', sa.Float(), nullable=False),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('validity_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('validity_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('material_cost', sa.Float(), nullable=True),
    sa.Column('labor_cost', sa.Float(), nullable=True),
    sa.Column('overhead_cost', sa.Float(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['output_item_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'bom_name', 'version', name='uq_bom_org_name_version')
    )
    with op.batch_alter_table('bill_of_materials', schema=None) as batch_op:
        batch_op.create_index('idx_bom_org_active', ['organization_id', 'is_active'], unique=False)
        batch_op.create_index('idx_bom_org_created', ['organization_id', 'created_at'], unique=False)
        batch_op.create_index('idx_bom_org_output', ['organization_id', 'output_item_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_bill_of_materials_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_bill_of_materials_organization_id'), ['organization_id'], unique=False)

    op.create_table('contra_vouchers',
    sa.Column('from_account', sa.String(), nullable=False),
    sa.Column('to_account', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_contra_org_voucher_number')
    )
    with op.batch_alter_table('contra_vouchers', schema=None) as batch_op:
        batch_op.create_index('idx_contra_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index('idx_contra_org_from_account', ['organization_id', 'from_account'], unique=False)
        batch_op.create_index('idx_contra_org_to_account', ['organization_id', 'to_account'], unique=False)
        batch_op.create_index(batch_op.f('ix_contra_vouchers_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_contra_vouchers_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_contra_vouchers_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('credit_notes',
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('reference_voucher_type', sa.String(), nullable=True),
    sa.Column('reference_voucher_id', sa.Integer(), nullable=True),
    sa.Column('reason', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_cn_org_voucher_number')
    )
    with op.batch_alter_table('credit_notes', schema=None) as batch_op:
        batch_op.create_index('idx_cn_org_customer', ['organization_id', 'customer_id'], unique=False)
        batch_op.create_index('idx_cn_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index('idx_cn_org_vendor', ['organization_id', 'vendor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_notes_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_notes_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_notes_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('customer_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('original_filename', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.String(), nullable=False),
    sa.Column('file_type', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('customer_files', schema=None) as batch_op:
        batch_op.create_index('idx_customer_file_org_customer', ['organization_id', 'customer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_customer_files_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_customer_files_organization_id'), ['organization_id'], unique=False)

    op.create_table('customer_interactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('interaction_type', sa.String(), nullable=False),
    sa.Column('subject', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('interaction_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('customer_interactions', schema=None) as batch_op:
        batch_op.create_index('idx_customer_interaction_date', ['interaction_date'], unique=False)
        batch_op.create_index('idx_customer_interaction_org_customer', ['organization_id', 'customer_id'], unique=False)
        batch_op.create_index('idx_customer_interaction_type_status', ['interaction_type', 'status'], unique=False)
        batch_op.create_index(batch_op.f('ix_customer_interactions_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_customer_interactions_organization_id'), ['organization_id'], unique=False)

    op.create_table('customer_segments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('segment_name', sa.String(), nullable=False),
    sa.Column('segment_value', sa.Float(), nullable=True),
    sa.Column('segment_description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('assigned_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('assigned_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['assigned_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'customer_id', 'segment_name', name='uq_customer_segment_org_customer_name')
    )
    with op.batch_alter_table('customer_segments', schema=None) as batch_op:
        batch_op.create_index('idx_customer_segment_assigned_date', ['assigned_date'], unique=False)
        batch_op.create_index('idx_customer_segment_name_active', ['segment_name', 'is_active'], unique=False)
        batch_op.create_index('idx_customer_segment_org_customer', ['organization_id', 'customer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_customer_segments_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_customer_segments_organization_id'), ['organization_id'], unique=False)

    op.create_table('debit_notes',
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('reference_voucher_type', sa.String(), nullable=True),
    sa.Column('reference_voucher_id', sa.Integer(), nullable=True),
    sa.Column('reason', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_dn_org_voucher_number')
    )
    with op.batch_alter_table('debit_notes', schema=None) as batch_op:
        batch_op.create_index('idx_dn_org_customer', ['organization_id', 'customer_id'], unique=False)
        batch_op.create_index('idx_dn_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index('idx_dn_org_vendor', ['organization_id', 'vendor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_debit_notes_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_debit_notes_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_debit_notes_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('inter_department_vouchers',
    sa.Column('from_department', sa.String(), nullable=False),
    sa.Column('to_department', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_idv_org_voucher_number')
    )
    with op.batch_alter_table('inter_department_vouchers', schema=None) as batch_op:
        batch_op.create_index('idx_idv_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index('idx_idv_org_from_dept', ['organization_id', 'from_department'], unique=False)
        batch_op.create_index('idx_idv_org_to_dept', ['organization_id', 'to_department'], unique=False)
        batch_op.create_index(batch_op.f('ix_inter_department_vouchers_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_inter_department_vouchers_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_inter_department_vouchers_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('journal_vouchers',
    sa.Column('entries', sa.Text(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_journal_org_voucher_number')
    )
    with op.batch_alter_table('journal_vouchers', schema=None) as batch_op:
        batch_op.create_index('idx_journal_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index(batch_op.f('ix_journal_vouchers_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_journal_vouchers_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_journal_vouchers_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('notification_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('template_type', sa.String(), nullable=False),
    sa.Column('channel', sa.String(), nullable=False),
    sa.Column('subject', sa.String(), nullable=True),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('html_body', sa.Text(), nullable=True),
    sa.Column('trigger_event', sa.String(), nullable=True),
    sa.Column('trigger_conditions', sa.JSON(), nullable=True),
    sa.Column('variables', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'name', name='uq_notification_template_org_name')
    )
    with op.batch_alter_table('notification_templates', schema=None) as batch_op:
        batch_op.create_index('idx_notification_template_org_channel', ['organization_id', 'channel'], unique=False)
        batch_op.create_index('idx_notification_template_org_type', ['organization_id', 'template_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_templates_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_templates_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_templates_organization_id'), ['organization_id'], unique=False)

    op.create_table('payment_vouchers',
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('payment_method', sa.String(), nullable=True),
    sa.Column('reference', sa.String(), nullable=True),
    sa.Column('bank_account', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_pv_payment_org_voucher_number')
    )
    with op.batch_alter_table('payment_vouchers', schema=None) as batch_op:
        batch_op.create_index('idx_pv_payment_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index('idx_pv_payment_org_vendor', ['organization_id', 'vendor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payment_vouchers_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payment_vouchers_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payment_vouchers_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('product_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('original_filename', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('product_files', schema=None) as batch_op:
        batch_op.create_index('idx_product_file_org_product', ['organization_id', 'product_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_product_files_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_product_files_organization_id'), ['organization_id'], unique=False)

    op.create_table('proforma_invoices',
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('valid_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('payment_terms', sa.String(), nullable=True),
    sa.Column('terms_conditions', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_pi_org_voucher_number')
    )
    with op.batch_alter_table('proforma_invoices', schema=None) as batch_op:
        batch_op.create_index('idx_pi_org_customer', ['organization_id', 'customer_id'], unique=False)
        batch_op.create_index('idx_pi_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index(batch_op.f('ix_proforma_invoices_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_proforma_invoices_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_proforma_invoices_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('purchase_orders',
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('delivery_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('payment_terms', sa.String(), nullable=True),
    sa.Column('terms_conditions', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_po_org_voucher_number')
    )
    with op.batch_alter_table('purchase_orders', schema=None) as batch_op:
        batch_op.create_index('idx_po_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index('idx_po_org_status', ['organization_id', 'status'], unique=False)
        batch_op.create_index('idx_po_org_vendor', ['organization_id', 'vendor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_purchase_orders_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_purchase_orders_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_purchase_orders_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('quotations',
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('valid_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('payment_terms', sa.String(), nullable=True),
    sa.Column('terms_conditions', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_quotation_org_voucher_number')
    )
    with op.batch_alter_table('quotations', schema=None) as batch_op:
        batch_op.create_index('idx_quotation_org_customer', ['organization_id', 'customer_id'], unique=False)
        batch_op.create_index('idx_quotation_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index(batch_op.f('ix_quotations_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_quotations_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_quotations_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('receipt_vouchers',
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('receipt_method', sa.String(), nullable=True),
    sa.Column('reference', sa.String(), nullable=True),
    sa.Column('bank_account', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_rv_org_voucher_number')
    )
    with op.batch_alter_table('receipt_vouchers', schema=None) as batch_op:
        batch_op.create_index('idx_rv_org_customer', ['organization_id', 'customer_id'], unique=False)
        batch_op.create_index('idx_rv_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index(batch_op.f('ix_receipt_vouchers_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_receipt_vouchers_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_receipt_vouchers_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('sales_orders',
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('delivery_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('payment_terms', sa.String(), nullable=True),
    sa.Column('terms_conditions', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_so_org_voucher_number')
    )
    with op.batch_alter_table('sales_orders', schema=None) as batch_op:
        batch_op.create_index('idx_so_org_customer', ['organization_id', 'customer_id'], unique=False)
        batch_op.create_index('idx_so_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index('idx_so_org_status', ['organization_id', 'status'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_orders_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_orders_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_orders_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('service_role_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['service_permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['service_roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role_id', 'permission_id', name='uq_service_role_permission')
    )
    with op.batch_alter_table('service_role_permissions', schema=None) as batch_op:
        batch_op.create_index('idx_service_role_permission_permission', ['permission_id'], unique=False)
        batch_op.create_index('idx_service_role_permission_role', ['role_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_service_role_permissions_id'), ['id'], unique=False)

    op.create_table('sla_policies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('priority', sa.String(), nullable=True),
    sa.Column('ticket_type', sa.String(), nullable=True),
    sa.Column('customer_tier', sa.String(), nullable=True),
    sa.Column('response_time_hours', sa.Float(), nullable=False),
    sa.Column('resolution_time_hours', sa.Float(), nullable=False),
    sa.Column('escalation_enabled', sa.Boolean(), nullable=False),
    sa.Column('escalation_threshold_percent', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'name', name='uq_sla_policy_org_name')
    )
    with op.batch_alter_table('sla_policies', schema=None) as batch_op:
        batch_op.create_index('idx_sla_policy_default', ['is_default'], unique=False)
        batch_op.create_index('idx_sla_policy_org_active', ['organization_id', 'is_active'], unique=False)
        batch_op.create_index('idx_sla_policy_priority', ['priority'], unique=False)
        batch_op.create_index('idx_sla_policy_ticket_type', ['ticket_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_sla_policies_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sla_policies_organization_id'), ['organization_id'], unique=False)

    op.create_table('stock',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('last_updated', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'product_id', 'location', name='uq_stock_org_product_location')
    )
    with op.batch_alter_table('stock', schema=None) as batch_op:
        batch_op.create_index('idx_stock_org_location', ['organization_id', 'location'], unique=False)
        batch_op.create_index('idx_stock_org_product', ['organization_id', 'product_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_stock_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_stock_organization_id'), ['organization_id'], unique=False)

    op.create_table('tickets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('ticket_number', sa.String(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('assigned_to_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('priority', sa.String(), nullable=False),
    sa.Column('ticket_type', sa.String(), nullable=False),
    sa.Column('resolution', sa.Text(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('closed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('estimated_hours', sa.Float(), nullable=True),
    sa.Column('actual_hours', sa.Float(), nullable=True),
    sa.Column('customer_rating', sa.Integer(), nullable=True),
    sa.Column('customer_feedback', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'ticket_number', name='uq_ticket_org_number')
    )
    with op.batch_alter_table('tickets', schema=None) as batch_op:
        batch_op.create_index('idx_ticket_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_ticket_due_date', ['due_date'], unique=False)
        batch_op.create_index('idx_ticket_org_assigned', ['organization_id', 'assigned_to_id'], unique=False)
        batch_op.create_index('idx_ticket_org_customer', ['organization_id', 'customer_id'], unique=False)
        batch_op.create_index('idx_ticket_org_priority', ['organization_id', 'priority'], unique=False)
        batch_op.create_index('idx_ticket_org_status', ['organization_id', 'status'], unique=False)
        batch_op.create_index('idx_ticket_org_type', ['organization_id', 'ticket_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_tickets_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_tickets_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_tickets_ticket_number'), ['ticket_number'], unique=False)

    op.create_table('user_service_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('assigned_by_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['assigned_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['service_roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'role_id', name='uq_user_service_role')
    )
    with op.batch_alter_table('user_service_roles', schema=None) as batch_op:
        batch_op.create_index('idx_user_service_role_active', ['is_active'], unique=False)
        batch_op.create_index('idx_user_service_role_role', ['role_id'], unique=False)
        batch_op.create_index('idx_user_service_role_user', ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_service_roles_id'), ['id'], unique=False)

    op.create_table('vendor_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('original_filename', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.String(), nullable=False),
    sa.Column('file_type', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('vendor_files', schema=None) as batch_op:
        batch_op.create_index('idx_vendor_file_org_vendor', ['organization_id', 'vendor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_vendor_files_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_vendor_files_organization_id'), ['organization_id'], unique=False)

    op.create_table('bom_components',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('bom_id', sa.Integer(), nullable=False),
    sa.Column('component_item_id', sa.Integer(), nullable=False),
    sa.Column('quantity_required', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('wastage_percentage', sa.Float(), nullable=True),
    sa.Column('is_optional', sa.Boolean(), nullable=True),
    sa.Column('sequence', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['bom_id'], ['bill_of_materials.id'], ),
    sa.ForeignKeyConstraint(['component_item_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('bom_id', 'component_item_id', name='uq_bom_component_item')
    )
    with op.batch_alter_table('bom_components', schema=None) as batch_op:
        batch_op.create_index('idx_bom_comp_org_bom', ['organization_id', 'bom_id'], unique=False)
        batch_op.create_index('idx_bom_comp_org_item', ['organization_id', 'component_item_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_bom_components_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_bom_components_organization_id'), ['organization_id'], unique=False)

    op.create_table('credit_note_items',
    sa.Column('credit_note_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['credit_note_id'], ['credit_notes.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('credit_note_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_credit_note_items_id'), ['id'], unique=False)

    op.create_table('debit_note_items',
    sa.Column('debit_note_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['debit_note_id'], ['debit_notes.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('debit_note_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_debit_note_items_id'), ['id'], unique=False)

    op.create_table('delivery_challans',
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('sales_order_id', sa.Integer(), nullable=True),
    sa.Column('delivery_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('transport_mode', sa.String(), nullable=True),
    sa.Column('vehicle_number', sa.String(), nullable=True),
    sa.Column('lr_rr_number', sa.String(), nullable=True),
    sa.Column('destination', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['sales_order_id'], ['sales_orders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_dc_org_voucher_number')
    )
    with op.batch_alter_table('delivery_challans', schema=None) as batch_op:
        batch_op.create_index('idx_dc_org_customer', ['organization_id', 'customer_id'], unique=False)
        batch_op.create_index('idx_dc_org_date', ['organization_id', 'delivery_date'], unique=False)
        batch_op.create_index('idx_dc_org_so', ['organization_id', 'sales_order_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_delivery_challans_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_delivery_challans_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_delivery_challans_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('goods_receipt_notes',
    sa.Column('purchase_order_id', sa.Integer(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('grn_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('challan_number', sa.String(), nullable=True),
    sa.Column('challan_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('transport_mode', sa.String(), nullable=True),
    sa.Column('vehicle_number', sa.String(), nullable=True),
    sa.Column('lr_rr_number', sa.String(), nullable=True),
    sa.Column('inspection_status', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['purchase_order_id'], ['purchase_orders.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_grn_org_voucher_number')
    )
    with op.batch_alter_table('goods_receipt_notes', schema=None) as batch_op:
        batch_op.create_index('idx_grn_org_date', ['organization_id', 'grn_date'], unique=False)
        batch_op.create_index('idx_grn_org_po', ['organization_id', 'purchase_order_id'], unique=False)
        batch_op.create_index('idx_grn_org_vendor', ['organization_id', 'vendor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_goods_receipt_notes_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_goods_receipt_notes_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_goods_receipt_notes_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('inter_department_voucher_items',
    sa.Column('inter_department_voucher_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['inter_department_voucher_id'], ['inter_department_vouchers.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('inter_department_voucher_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_inter_department_voucher_items_id'), ['id'], unique=False)

    op.create_table('manufacturing_orders',
    sa.Column('bom_id', sa.Integer(), nullable=False),
    sa.Column('planned_quantity', sa.Float(), nullable=False),
    sa.Column('produced_quantity', sa.Float(), nullable=True),
    sa.Column('scrap_quantity', sa.Float(), nullable=True),
    sa.Column('planned_start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('planned_end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('production_status', sa.String(), nullable=True),
    sa.Column('priority', sa.String(), nullable=True),
    sa.Column('production_department', sa.String(), nullable=True),
    sa.Column('production_location', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bom_id'], ['bill_of_materials.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_mo_org_voucher_number')
    )
    with op.batch_alter_table('manufacturing_orders', schema=None) as batch_op:
        batch_op.create_index('idx_mo_org_bom', ['organization_id', 'bom_id'], unique=False)
        batch_op.create_index('idx_mo_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index('idx_mo_org_status', ['organization_id', 'production_status'], unique=False)
        batch_op.create_index(batch_op.f('ix_manufacturing_orders_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_manufacturing_orders_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_manufacturing_orders_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('notification_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=True),
    sa.Column('recipient_type', sa.String(), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=True),
    sa.Column('recipient_identifier', sa.String(), nullable=False),
    sa.Column('channel', sa.String(), nullable=False),
    sa.Column('subject', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('delivered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('opened_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('clicked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('trigger_event', sa.String(), nullable=True),
    sa.Column('context_data', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['notification_templates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notification_logs', schema=None) as batch_op:
        batch_op.create_index('idx_notification_log_org_channel', ['organization_id', 'channel'], unique=False)
        batch_op.create_index('idx_notification_log_org_status', ['organization_id', 'status'], unique=False)
        batch_op.create_index('idx_notification_log_recipient', ['recipient_type', 'recipient_id'], unique=False)
        batch_op.create_index('idx_notification_log_sent_at', ['sent_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_logs_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_logs_organization_id'), ['organization_id'], unique=False)

    op.create_table('proforma_invoice_items',
    sa.Column('proforma_invoice_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('discount_percentage', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('taxable_amount', sa.Float(), nullable=False),
    sa.Column('gst_rate', sa.Float(), nullable=True),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['proforma_invoice_id'], ['proforma_invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('proforma_invoice_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_proforma_invoice_items_id'), ['id'], unique=False)

    op.create_table('purchase_order_items',
    sa.Column('purchase_order_id', sa.Integer(), nullable=False),
    sa.Column('delivered_quantity', sa.Float(), nullable=True),
    sa.Column('pending_quantity', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['purchase_order_id'], ['purchase_orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('purchase_order_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_purchase_order_items_id'), ['id'], unique=False)

    op.create_table('quotation_items',
    sa.Column('quotation_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['quotation_id'], ['quotations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('quotation_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_quotation_items_id'), ['id'], unique=False)

    op.create_table('sales_order_items',
    sa.Column('sales_order_id', sa.Integer(), nullable=False),
    sa.Column('delivered_quantity', sa.Float(), nullable=True),
    sa.Column('pending_quantity', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['sales_order_id'], ['sales_orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sales_order_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sales_order_items_id'), ['id'], unique=False)

    op.create_table('sla_tracking',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('ticket_id', sa.Integer(), nullable=False),
    sa.Column('policy_id', sa.Integer(), nullable=False),
    sa.Column('response_deadline', sa.DateTime(timezone=True), nullable=False),
    sa.Column('resolution_deadline', sa.DateTime(timezone=True), nullable=False),
    sa.Column('first_response_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('response_status', sa.String(), nullable=False),
    sa.Column('resolution_status', sa.String(), nullable=False),
    sa.Column('escalation_triggered', sa.Boolean(), nullable=False),
    sa.Column('escalation_triggered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('escalation_level', sa.Integer(), nullable=False),
    sa.Column('response_breach_hours', sa.Float(), nullable=True),
    sa.Column('resolution_breach_hours', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['policy_id'], ['sla_policies.id'], ),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ticket_id')
    )
    with op.batch_alter_table('sla_tracking', schema=None) as batch_op:
        batch_op.create_index('idx_sla_tracking_escalation', ['escalation_triggered'], unique=False)
        batch_op.create_index('idx_sla_tracking_org_ticket', ['organization_id', 'ticket_id'], unique=False)
        batch_op.create_index('idx_sla_tracking_policy', ['policy_id'], unique=False)
        batch_op.create_index('idx_sla_tracking_resolution_deadline', ['resolution_deadline'], unique=False)
        batch_op.create_index('idx_sla_tracking_resolution_status', ['resolution_status'], unique=False)
        batch_op.create_index('idx_sla_tracking_response_deadline', ['response_deadline'], unique=False)
        batch_op.create_index('idx_sla_tracking_response_status', ['response_status'], unique=False)
        batch_op.create_index(batch_op.f('ix_sla_tracking_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sla_tracking_organization_id'), ['organization_id'], unique=False)

    op.create_table('ticket_attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('ticket_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('original_filename', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.String(), nullable=False),
    sa.Column('file_type', sa.String(), nullable=False),
    sa.Column('uploaded_by_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ticket_attachments', schema=None) as batch_op:
        batch_op.create_index('idx_ticket_attachment_org_ticket', ['organization_id', 'ticket_id'], unique=False)
        batch_op.create_index('idx_ticket_attachment_type', ['file_type'], unique=False)
        batch_op.create_index('idx_ticket_attachment_uploaded_by', ['uploaded_by_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_ticket_attachments_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_ticket_attachments_organization_id'), ['organization_id'], unique=False)

    op.create_table('ticket_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('ticket_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('field_changed', sa.String(), nullable=True),
    sa.Column('old_value', sa.Text(), nullable=True),
    sa.Column('new_value', sa.Text(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('changed_by_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['changed_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ticket_history', schema=None) as batch_op:
        batch_op.create_index('idx_ticket_history_action', ['action'], unique=False)
        batch_op.create_index('idx_ticket_history_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_ticket_history_org_ticket', ['organization_id', 'ticket_id'], unique=False)
        batch_op.create_index('idx_ticket_history_user', ['changed_by_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_ticket_history_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_ticket_history_organization_id'), ['organization_id'], unique=False)

    op.create_table('delivery_challan_items',
    sa.Column('delivery_challan_id', sa.Integer(), nullable=False),
    sa.Column('so_item_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['delivery_challan_id'], ['delivery_challans.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['so_item_id'], ['sales_order_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('delivery_challan_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_delivery_challan_items_id'), ['id'], unique=False)

    op.create_table('goods_receipt_note_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('grn_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('po_item_id', sa.Integer(), nullable=True),
    sa.Column('ordered_quantity', sa.Float(), nullable=False),
    sa.Column('received_quantity', sa.Float(), nullable=False),
    sa.Column('accepted_quantity', sa.Float(), nullable=False),
    sa.Column('rejected_quantity', sa.Float(), nullable=True),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_cost', sa.Float(), nullable=False),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.Column('batch_number', sa.String(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('quality_status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['grn_id'], ['goods_receipt_notes.id'], ),
    sa.ForeignKeyConstraint(['po_item_id'], ['purchase_order_items.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('goods_receipt_note_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_goods_receipt_note_items_id'), ['id'], unique=False)

    op.create_table('job_card_vouchers',
    sa.Column('job_type', sa.String(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('manufacturing_order_id', sa.Integer(), nullable=True),
    sa.Column('job_description', sa.Text(), nullable=False),
    sa.Column('job_category', sa.String(), nullable=True),
    sa.Column('expected_completion_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_completion_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('materials_supplied_by', sa.String(), nullable=True),
    sa.Column('delivery_address', sa.Text(), nullable=True),
    sa.Column('transport_mode', sa.String(), nullable=True),
    sa.Column('job_status', sa.String(), nullable=True),
    sa.Column('quality_specifications', sa.Text(), nullable=True),
    sa.Column('quality_check_required', sa.Boolean(), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approval_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['manufacturing_order_id'], ['manufacturing_orders.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_jcv_org_voucher_number')
    )
    with op.batch_alter_table('job_card_vouchers', schema=None) as batch_op:
        batch_op.create_index('idx_jcv_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index('idx_jcv_org_mo', ['organization_id', 'manufacturing_order_id'], unique=False)
        batch_op.create_index('idx_jcv_org_status', ['organization_id', 'job_status'], unique=False)
        batch_op.create_index('idx_jcv_org_vendor', ['organization_id', 'vendor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_card_vouchers_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_card_vouchers_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_card_vouchers_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('manufacturing_journal_vouchers',
    sa.Column('manufacturing_order_id', sa.Integer(), nullable=False),
    sa.Column('bom_id', sa.Integer(), nullable=False),
    sa.Column('date_of_manufacture', sa.DateTime(timezone=True), nullable=False),
    sa.Column('shift', sa.String(), nullable=True),
    sa.Column('operator', sa.String(), nullable=True),
    sa.Column('supervisor', sa.String(), nullable=True),
    sa.Column('machine_used', sa.String(), nullable=True),
    sa.Column('finished_quantity', sa.Float(), nullable=True),
    sa.Column('scrap_quantity', sa.Float(), nullable=True),
    sa.Column('rework_quantity', sa.Float(), nullable=True),
    sa.Column('byproduct_quantity', sa.Float(), nullable=True),
    sa.Column('material_cost', sa.Float(), nullable=True),
    sa.Column('labor_cost', sa.Float(), nullable=True),
    sa.Column('overhead_cost', sa.Float(), nullable=True),
    sa.Column('total_manufacturing_cost', sa.Float(), nullable=True),
    sa.Column('quality_grade', sa.String(), nullable=True),
    sa.Column('quality_remarks', sa.Text(), nullable=True),
    sa.Column('narration', sa.Text(), nullable=True),
    sa.Column('attachment_path', sa.String(), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approval_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['bom_id'], ['bill_of_materials.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['manufacturing_order_id'], ['manufacturing_orders.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_mjv_org_voucher_number')
    )
    with op.batch_alter_table('manufacturing_journal_vouchers', schema=None) as batch_op:
        batch_op.create_index('idx_mjv_org_bom', ['organization_id', 'bom_id'], unique=False)
        batch_op.create_index('idx_mjv_org_date', ['organization_id', 'date_of_manufacture'], unique=False)
        batch_op.create_index('idx_mjv_org_mo', ['organization_id', 'manufacturing_order_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_manufacturing_journal_vouchers_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_manufacturing_journal_vouchers_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_manufacturing_journal_vouchers_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('material_issues',
    sa.Column('manufacturing_order_id', sa.Integer(), nullable=True),
    sa.Column('issued_to_department', sa.String(), nullable=True),
    sa.Column('issued_to_employee', sa.String(), nullable=True),
    sa.Column('purpose', sa.String(), nullable=True),
    sa.Column('destination', sa.String(), nullable=True),
    sa.Column('issue_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expected_return_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approval_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['manufacturing_order_id'], ['manufacturing_orders.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_mi_org_voucher_number')
    )
    with op.batch_alter_table('material_issues', schema=None) as batch_op:
        batch_op.create_index('idx_mi_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index('idx_mi_org_dept', ['organization_id', 'issued_to_department'], unique=False)
        batch_op.create_index('idx_mi_org_mo', ['organization_id', 'manufacturing_order_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_material_issues_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_material_issues_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_material_issues_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('material_receipt_vouchers',
    sa.Column('manufacturing_order_id', sa.Integer(), nullable=True),
    sa.Column('source_type', sa.String(), nullable=False),
    sa.Column('source_reference', sa.String(), nullable=True),
    sa.Column('received_from_department', sa.String(), nullable=True),
    sa.Column('received_from_employee', sa.String(), nullable=True),
    sa.Column('received_by_employee', sa.String(), nullable=True),
    sa.Column('receipt_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('inspection_required', sa.Boolean(), nullable=True),
    sa.Column('inspection_status', sa.String(), nullable=True),
    sa.Column('inspector_name', sa.String(), nullable=True),
    sa.Column('inspection_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('inspection_remarks', sa.Text(), nullable=True),
    sa.Column('condition_on_receipt', sa.String(), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approval_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['manufacturing_order_id'], ['manufacturing_orders.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_mrv_org_voucher_number')
    )
    with op.batch_alter_table('material_receipt_vouchers', schema=None) as batch_op:
        batch_op.create_index('idx_mrv_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index('idx_mrv_org_mo', ['organization_id', 'manufacturing_order_id'], unique=False)
        batch_op.create_index('idx_mrv_org_source', ['organization_id', 'source_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_material_receipt_vouchers_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_material_receipt_vouchers_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_material_receipt_vouchers_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('production_entries',
    sa.Column('manufacturing_order_id', sa.Integer(), nullable=False),
    sa.Column('shift', sa.String(), nullable=True),
    sa.Column('operator', sa.String(), nullable=True),
    sa.Column('machine_used', sa.String(), nullable=True),
    sa.Column('good_quantity', sa.Float(), nullable=True),
    sa.Column('rejected_quantity', sa.Float(), nullable=True),
    sa.Column('rework_quantity', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['manufacturing_order_id'], ['manufacturing_orders.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_pe_org_voucher_number')
    )
    with op.batch_alter_table('production_entries', schema=None) as batch_op:
        batch_op.create_index('idx_pe_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index('idx_pe_org_mo', ['organization_id', 'manufacturing_order_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_production_entries_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_production_entries_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_production_entries_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('purchase_vouchers',
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('purchase_order_id', sa.Integer(), nullable=True),
    sa.Column('grn_id', sa.Integer(), nullable=True),
    sa.Column('invoice_number', sa.String(), nullable=True),
    sa.Column('invoice_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('payment_terms', sa.String(), nullable=True),
    sa.Column('transport_mode', sa.String(), nullable=True),
    sa.Column('vehicle_number', sa.String(), nullable=True),
    sa.Column('lr_rr_number', sa.String(), nullable=True),
    sa.Column('e_way_bill_number', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['grn_id'], ['goods_receipt_notes.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['purchase_order_id'], ['purchase_orders.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_pv_org_voucher_number')
    )
    with op.batch_alter_table('purchase_vouchers', schema=None) as batch_op:
        batch_op.create_index('idx_pv_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index('idx_pv_org_grn', ['organization_id', 'grn_id'], unique=False)
        batch_op.create_index('idx_pv_org_po', ['organization_id', 'purchase_order_id'], unique=False)
        batch_op.create_index('idx_pv_org_vendor', ['organization_id', 'vendor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_purchase_vouchers_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_purchase_vouchers_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_purchase_vouchers_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('sales_vouchers',
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('sales_order_id', sa.Integer(), nullable=True),
    sa.Column('delivery_challan_id', sa.Integer(), nullable=True),
    sa.Column('invoice_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('payment_terms', sa.String(), nullable=True),
    sa.Column('place_of_supply', sa.String(), nullable=True),
    sa.Column('transport_mode', sa.String(), nullable=True),
    sa.Column('vehicle_number', sa.String(), nullable=True),
    sa.Column('lr_rr_number', sa.String(), nullable=True),
    sa.Column('e_way_bill_number', sa.String(), nullable=True),
    sa.Column('voucher_type', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['delivery_challan_id'], ['delivery_challans.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['sales_order_id'], ['sales_orders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_sv_org_voucher_number')
    )
    with op.batch_alter_table('sales_vouchers', schema=None) as batch_op:
        batch_op.create_index('idx_sv_org_challan', ['organization_id', 'delivery_challan_id'], unique=False)
        batch_op.create_index('idx_sv_org_customer', ['organization_id', 'customer_id'], unique=False)
        batch_op.create_index('idx_sv_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index('idx_sv_org_so', ['organization_id', 'sales_order_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_vouchers_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_vouchers_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_vouchers_voucher_number'), ['voucher_number'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_vouchers_voucher_type'), ['voucher_type'], unique=False)

    op.create_table('stock_journals',
    sa.Column('journal_type', sa.String(), nullable=False),
    sa.Column('from_location', sa.String(), nullable=True),
    sa.Column('to_location', sa.String(), nullable=True),
    sa.Column('from_warehouse', sa.String(), nullable=True),
    sa.Column('to_warehouse', sa.String(), nullable=True),
    sa.Column('manufacturing_order_id', sa.Integer(), nullable=True),
    sa.Column('bom_id', sa.Integer(), nullable=True),
    sa.Column('transfer_reason', sa.String(), nullable=True),
    sa.Column('assembly_product_id', sa.Integer(), nullable=True),
    sa.Column('assembly_quantity', sa.Float(), nullable=True),
    sa.Column('physical_verification_done', sa.Boolean(), nullable=True),
    sa.Column('verified_by', sa.String(), nullable=True),
    sa.Column('verification_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approval_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['assembly_product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['bom_id'], ['bill_of_materials.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['manufacturing_order_id'], ['manufacturing_orders.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_sj_org_voucher_number')
    )
    with op.batch_alter_table('stock_journals', schema=None) as batch_op:
        batch_op.create_index('idx_sj_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index('idx_sj_org_from_loc', ['organization_id', 'from_location'], unique=False)
        batch_op.create_index('idx_sj_org_mo', ['organization_id', 'manufacturing_order_id'], unique=False)
        batch_op.create_index('idx_sj_org_to_loc', ['organization_id', 'to_location'], unique=False)
        batch_op.create_index('idx_sj_org_type', ['organization_id', 'journal_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_stock_journals_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_stock_journals_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_stock_journals_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('job_card_received_outputs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('job_card_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity_received', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_rate', sa.Float(), nullable=True),
    sa.Column('total_value', sa.Float(), nullable=True),
    sa.Column('quality_status', sa.String(), nullable=True),
    sa.Column('inspection_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('inspection_remarks', sa.Text(), nullable=True),
    sa.Column('batch_number', sa.String(), nullable=True),
    sa.Column('receipt_date', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['job_card_id'], ['job_card_vouchers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('job_card_received_outputs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_job_card_received_outputs_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_card_received_outputs_organization_id'), ['organization_id'], unique=False)

    op.create_table('job_card_supplied_materials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('job_card_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity_supplied', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_rate', sa.Float(), nullable=True),
    sa.Column('total_value', sa.Float(), nullable=True),
    sa.Column('batch_number', sa.String(), nullable=True),
    sa.Column('lot_number', sa.String(), nullable=True),
    sa.Column('supply_date', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['job_card_id'], ['job_card_vouchers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('job_card_supplied_materials', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_job_card_supplied_materials_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_job_card_supplied_materials_organization_id'), ['organization_id'], unique=False)

    op.create_table('manufacturing_journal_byproducts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('journal_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_value', sa.Float(), nullable=True),
    sa.Column('total_value', sa.Float(), nullable=True),
    sa.Column('batch_number', sa.String(), nullable=True),
    sa.Column('condition', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['journal_id'], ['manufacturing_journal_vouchers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('manufacturing_journal_byproducts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_manufacturing_journal_byproducts_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_manufacturing_journal_byproducts_organization_id'), ['organization_id'], unique=False)

    op.create_table('manufacturing_journal_finished_products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('journal_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('quality_grade', sa.String(), nullable=True),
    sa.Column('batch_number', sa.String(), nullable=True),
    sa.Column('lot_number', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['journal_id'], ['manufacturing_journal_vouchers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('manufacturing_journal_finished_products', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_manufacturing_journal_finished_products_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_manufacturing_journal_finished_products_organization_id'), ['organization_id'], unique=False)

    op.create_table('manufacturing_journal_materials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('journal_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity_consumed', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('batch_number', sa.String(), nullable=True),
    sa.Column('lot_number', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['journal_id'], ['manufacturing_journal_vouchers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('manufacturing_journal_materials', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_manufacturing_journal_materials_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_manufacturing_journal_materials_organization_id'), ['organization_id'], unique=False)

    op.create_table('material_issue_items',
    sa.Column('material_issue_id', sa.Integer(), nullable=False),
    sa.Column('batch_number', sa.String(), nullable=True),
    sa.Column('lot_number', sa.String(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('warehouse_location', sa.String(), nullable=True),
    sa.Column('bin_location', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('discount_percentage', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('taxable_amount', sa.Float(), nullable=False),
    sa.Column('gst_rate', sa.Float(), nullable=True),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['material_issue_id'], ['material_issues.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('material_issue_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_material_issue_items_id'), ['id'], unique=False)

    op.create_table('material_receipt_items',
    sa.Column('receipt_id', sa.Integer(), nullable=False),
    sa.Column('batch_number', sa.String(), nullable=True),
    sa.Column('lot_number', sa.String(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('warehouse_location', sa.String(), nullable=True),
    sa.Column('bin_location', sa.String(), nullable=True),
    sa.Column('quality_status', sa.String(), nullable=True),
    sa.Column('inspection_remarks', sa.Text(), nullable=True),
    sa.Column('received_quantity', sa.Float(), nullable=True),
    sa.Column('accepted_quantity', sa.Float(), nullable=True),
    sa.Column('rejected_quantity', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('discount_percentage', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('taxable_amount', sa.Float(), nullable=False),
    sa.Column('gst_rate', sa.Float(), nullable=True),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['receipt_id'], ['material_receipt_vouchers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('material_receipt_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_material_receipt_items_id'), ['id'], unique=False)

    op.create_table('production_entry_items',
    sa.Column('production_entry_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('discount_percentage', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('taxable_amount', sa.Float(), nullable=False),
    sa.Column('gst_rate', sa.Float(), nullable=True),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['production_entry_id'], ['production_entries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('production_entry_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_production_entry_items_id'), ['id'], unique=False)

    op.create_table('purchase_returns',
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('reference_voucher_id', sa.Integer(), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['reference_voucher_id'], ['purchase_vouchers.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_pr_org_voucher_number')
    )
    with op.batch_alter_table('purchase_returns', schema=None) as batch_op:
        batch_op.create_index('idx_pr_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index('idx_pr_org_vendor', ['organization_id', 'vendor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_purchase_returns_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_purchase_returns_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_purchase_returns_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('purchase_voucher_items',
    sa.Column('purchase_voucher_id', sa.Integer(), nullable=False),
    sa.Column('grn_item_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('discount_percentage', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('taxable_amount', sa.Float(), nullable=False),
    sa.Column('gst_rate', sa.Float(), nullable=True),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['grn_item_id'], ['goods_receipt_note_items.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['purchase_voucher_id'], ['purchase_vouchers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('purchase_voucher_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_purchase_voucher_items_id'), ['id'], unique=False)

    op.create_table('sales_returns',
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('reference_voucher_id', sa.Integer(), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('voucher_number', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['reference_voucher_id'], ['sales_vouchers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'voucher_number', name='uq_sr_org_voucher_number')
    )
    with op.batch_alter_table('sales_returns', schema=None) as batch_op:
        batch_op.create_index('idx_sr_org_customer', ['organization_id', 'customer_id'], unique=False)
        batch_op.create_index('idx_sr_org_date', ['organization_id', 'date'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_returns_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_returns_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_returns_voucher_number'), ['voucher_number'], unique=False)

    op.create_table('sales_voucher_items',
    sa.Column('sales_voucher_id', sa.Integer(), nullable=False),
    sa.Column('delivery_challan_item_id', sa.Integer(), nullable=True),
    sa.Column('hsn_code', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('discount_percentage', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('taxable_amount', sa.Float(), nullable=False),
    sa.Column('gst_rate', sa.Float(), nullable=True),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['delivery_challan_item_id'], ['delivery_challan_items.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['sales_voucher_id'], ['sales_vouchers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sales_voucher_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sales_voucher_items_id'), ['id'], unique=False)

    op.create_table('stock_journal_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('stock_journal_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('debit_quantity', sa.Float(), nullable=True),
    sa.Column('credit_quantity', sa.Float(), nullable=True),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_rate', sa.Float(), nullable=True),
    sa.Column('debit_value', sa.Float(), nullable=True),
    sa.Column('credit_value', sa.Float(), nullable=True),
    sa.Column('from_location', sa.String(), nullable=True),
    sa.Column('to_location', sa.String(), nullable=True),
    sa.Column('from_warehouse', sa.String(), nullable=True),
    sa.Column('to_warehouse', sa.String(), nullable=True),
    sa.Column('from_bin', sa.String(), nullable=True),
    sa.Column('to_bin', sa.String(), nullable=True),
    sa.Column('batch_number', sa.String(), nullable=True),
    sa.Column('lot_number', sa.String(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('transformation_type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['stock_journal_id'], ['stock_journals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('stock_journal_entries', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_stock_journal_entries_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_stock_journal_entries_organization_id'), ['organization_id'], unique=False)

    op.create_table('purchase_return_items',
    sa.Column('purchase_return_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('discount_percentage', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('taxable_amount', sa.Float(), nullable=False),
    sa.Column('gst_rate', sa.Float(), nullable=True),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['purchase_return_id'], ['purchase_returns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('purchase_return_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_purchase_return_items_id'), ['id'], unique=False)

    op.create_table('sales_return_items',
    sa.Column('sales_return_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('discount_percentage', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('taxable_amount', sa.Float(), nullable=False),
    sa.Column('gst_rate', sa.Float(), nullable=True),
    sa.Column('cgst_amount', sa.Float(), nullable=True),
    sa.Column('sgst_amount', sa.Float(), nullable=True),
    sa.Column('igst_amount', sa.Float(), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['sales_return_id'], ['sales_returns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sales_return_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sales_return_items_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sales_return_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sales_return_items_id'))

    op.drop_table('sales_return_items')
    with op.batch_alter_table('purchase_return_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_purchase_return_items_id'))

    op.drop_table('purchase_return_items')
    with op.batch_alter_table('stock_journal_entries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_stock_journal_entries_organization_id'))
        batch_op.drop_index(batch_op.f('ix_stock_journal_entries_id'))

    op.drop_table('stock_journal_entries')
    with op.batch_alter_table('sales_voucher_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sales_voucher_items_id'))

    op.drop_table('sales_voucher_items')
    with op.batch_alter_table('sales_returns', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sales_returns_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_sales_returns_organization_id'))
        batch_op.drop_index(batch_op.f('ix_sales_returns_id'))
        batch_op.drop_index('idx_sr_org_date')
        batch_op.drop_index('idx_sr_org_customer')

    op.drop_table('sales_returns')
    with op.batch_alter_table('purchase_voucher_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_purchase_voucher_items_id'))

    op.drop_table('purchase_voucher_items')
    with op.batch_alter_table('purchase_returns', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_purchase_returns_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_purchase_returns_organization_id'))
        batch_op.drop_index(batch_op.f('ix_purchase_returns_id'))
        batch_op.drop_index('idx_pr_org_vendor')
        batch_op.drop_index('idx_pr_org_date')

    op.drop_table('purchase_returns')
    with op.batch_alter_table('production_entry_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_production_entry_items_id'))

    op.drop_table('production_entry_items')
    with op.batch_alter_table('material_receipt_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_material_receipt_items_id'))

    op.drop_table('material_receipt_items')
    with op.batch_alter_table('material_issue_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_material_issue_items_id'))

    op.drop_table('material_issue_items')
    with op.batch_alter_table('manufacturing_journal_materials', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_manufacturing_journal_materials_organization_id'))
        batch_op.drop_index(batch_op.f('ix_manufacturing_journal_materials_id'))

    op.drop_table('manufacturing_journal_materials')
    with op.batch_alter_table('manufacturing_journal_finished_products', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_manufacturing_journal_finished_products_organization_id'))
        batch_op.drop_index(batch_op.f('ix_manufacturing_journal_finished_products_id'))

    op.drop_table('manufacturing_journal_finished_products')
    with op.batch_alter_table('manufacturing_journal_byproducts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_manufacturing_journal_byproducts_organization_id'))
        batch_op.drop_index(batch_op.f('ix_manufacturing_journal_byproducts_id'))

    op.drop_table('manufacturing_journal_byproducts')
    with op.batch_alter_table('job_card_supplied_materials', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_job_card_supplied_materials_organization_id'))
        batch_op.drop_index(batch_op.f('ix_job_card_supplied_materials_id'))

    op.drop_table('job_card_supplied_materials')
    with op.batch_alter_table('job_card_received_outputs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_job_card_received_outputs_organization_id'))
        batch_op.drop_index(batch_op.f('ix_job_card_received_outputs_id'))

    op.drop_table('job_card_received_outputs')
    with op.batch_alter_table('stock_journals', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_stock_journals_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_stock_journals_organization_id'))
        batch_op.drop_index(batch_op.f('ix_stock_journals_id'))
        batch_op.drop_index('idx_sj_org_type')
        batch_op.drop_index('idx_sj_org_to_loc')
        batch_op.drop_index('idx_sj_org_mo')
        batch_op.drop_index('idx_sj_org_from_loc')
        batch_op.drop_index('idx_sj_org_date')

    op.drop_table('stock_journals')
    with op.batch_alter_table('sales_vouchers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sales_vouchers_voucher_type'))
        batch_op.drop_index(batch_op.f('ix_sales_vouchers_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_sales_vouchers_organization_id'))
        batch_op.drop_index(batch_op.f('ix_sales_vouchers_id'))
        batch_op.drop_index('idx_sv_org_so')
        batch_op.drop_index('idx_sv_org_date')
        batch_op.drop_index('idx_sv_org_customer')
        batch_op.drop_index('idx_sv_org_challan')

    op.drop_table('sales_vouchers')
    with op.batch_alter_table('purchase_vouchers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_purchase_vouchers_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_purchase_vouchers_organization_id'))
        batch_op.drop_index(batch_op.f('ix_purchase_vouchers_id'))
        batch_op.drop_index('idx_pv_org_vendor')
        batch_op.drop_index('idx_pv_org_po')
        batch_op.drop_index('idx_pv_org_grn')
        batch_op.drop_index('idx_pv_org_date')

    op.drop_table('purchase_vouchers')
    with op.batch_alter_table('production_entries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_production_entries_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_production_entries_organization_id'))
        batch_op.drop_index(batch_op.f('ix_production_entries_id'))
        batch_op.drop_index('idx_pe_org_mo')
        batch_op.drop_index('idx_pe_org_date')

    op.drop_table('production_entries')
    with op.batch_alter_table('material_receipt_vouchers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_material_receipt_vouchers_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_material_receipt_vouchers_organization_id'))
        batch_op.drop_index(batch_op.f('ix_material_receipt_vouchers_id'))
        batch_op.drop_index('idx_mrv_org_source')
        batch_op.drop_index('idx_mrv_org_mo')
        batch_op.drop_index('idx_mrv_org_date')

    op.drop_table('material_receipt_vouchers')
    with op.batch_alter_table('material_issues', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_material_issues_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_material_issues_organization_id'))
        batch_op.drop_index(batch_op.f('ix_material_issues_id'))
        batch_op.drop_index('idx_mi_org_mo')
        batch_op.drop_index('idx_mi_org_dept')
        batch_op.drop_index('idx_mi_org_date')

    op.drop_table('material_issues')
    with op.batch_alter_table('manufacturing_journal_vouchers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_manufacturing_journal_vouchers_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_manufacturing_journal_vouchers_organization_id'))
        batch_op.drop_index(batch_op.f('ix_manufacturing_journal_vouchers_id'))
        batch_op.drop_index('idx_mjv_org_mo')
        batch_op.drop_index('idx_mjv_org_date')
        batch_op.drop_index('idx_mjv_org_bom')

    op.drop_table('manufacturing_journal_vouchers')
    with op.batch_alter_table('job_card_vouchers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_job_card_vouchers_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_job_card_vouchers_organization_id'))
        batch_op.drop_index(batch_op.f('ix_job_card_vouchers_id'))
        batch_op.drop_index('idx_jcv_org_vendor')
        batch_op.drop_index('idx_jcv_org_status')
        batch_op.drop_index('idx_jcv_org_mo')
        batch_op.drop_index('idx_jcv_org_date')

    op.drop_table('job_card_vouchers')
    with op.batch_alter_table('goods_receipt_note_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_goods_receipt_note_items_id'))

    op.drop_table('goods_receipt_note_items')
    with op.batch_alter_table('delivery_challan_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_delivery_challan_items_id'))

    op.drop_table('delivery_challan_items')
    with op.batch_alter_table('ticket_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ticket_history_organization_id'))
        batch_op.drop_index(batch_op.f('ix_ticket_history_id'))
        batch_op.drop_index('idx_ticket_history_user')
        batch_op.drop_index('idx_ticket_history_org_ticket')
        batch_op.drop_index('idx_ticket_history_created_at')
        batch_op.drop_index('idx_ticket_history_action')

    op.drop_table('ticket_history')
    with op.batch_alter_table('ticket_attachments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ticket_attachments_organization_id'))
        batch_op.drop_index(batch_op.f('ix_ticket_attachments_id'))
        batch_op.drop_index('idx_ticket_attachment_uploaded_by')
        batch_op.drop_index('idx_ticket_attachment_type')
        batch_op.drop_index('idx_ticket_attachment_org_ticket')

    op.drop_table('ticket_attachments')
    with op.batch_alter_table('sla_tracking', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sla_tracking_organization_id'))
        batch_op.drop_index(batch_op.f('ix_sla_tracking_id'))
        batch_op.drop_index('idx_sla_tracking_response_status')
        batch_op.drop_index('idx_sla_tracking_response_deadline')
        batch_op.drop_index('idx_sla_tracking_resolution_status')
        batch_op.drop_index('idx_sla_tracking_resolution_deadline')
        batch_op.drop_index('idx_sla_tracking_policy')
        batch_op.drop_index('idx_sla_tracking_org_ticket')
        batch_op.drop_index('idx_sla_tracking_escalation')

    op.drop_table('sla_tracking')
    with op.batch_alter_table('sales_order_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sales_order_items_id'))

    op.drop_table('sales_order_items')
    with op.batch_alter_table('quotation_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_quotation_items_id'))

    op.drop_table('quotation_items')
    with op.batch_alter_table('purchase_order_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_purchase_order_items_id'))

    op.drop_table('purchase_order_items')
    with op.batch_alter_table('proforma_invoice_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_proforma_invoice_items_id'))

    op.drop_table('proforma_invoice_items')
    with op.batch_alter_table('notification_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notification_logs_organization_id'))
        batch_op.drop_index(batch_op.f('ix_notification_logs_id'))
        batch_op.drop_index('idx_notification_log_sent_at')
        batch_op.drop_index('idx_notification_log_recipient')
        batch_op.drop_index('idx_notification_log_org_status')
        batch_op.drop_index('idx_notification_log_org_channel')

    op.drop_table('notification_logs')
    with op.batch_alter_table('manufacturing_orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_manufacturing_orders_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_manufacturing_orders_organization_id'))
        batch_op.drop_index(batch_op.f('ix_manufacturing_orders_id'))
        batch_op.drop_index('idx_mo_org_status')
        batch_op.drop_index('idx_mo_org_date')
        batch_op.drop_index('idx_mo_org_bom')

    op.drop_table('manufacturing_orders')
    with op.batch_alter_table('inter_department_voucher_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_inter_department_voucher_items_id'))

    op.drop_table('inter_department_voucher_items')
    with op.batch_alter_table('goods_receipt_notes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_goods_receipt_notes_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_goods_receipt_notes_organization_id'))
        batch_op.drop_index(batch_op.f('ix_goods_receipt_notes_id'))
        batch_op.drop_index('idx_grn_org_vendor')
        batch_op.drop_index('idx_grn_org_po')
        batch_op.drop_index('idx_grn_org_date')

    op.drop_table('goods_receipt_notes')
    with op.batch_alter_table('delivery_challans', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_delivery_challans_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_delivery_challans_organization_id'))
        batch_op.drop_index(batch_op.f('ix_delivery_challans_id'))
        batch_op.drop_index('idx_dc_org_so')
        batch_op.drop_index('idx_dc_org_date')
        batch_op.drop_index('idx_dc_org_customer')

    op.drop_table('delivery_challans')
    with op.batch_alter_table('debit_note_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_debit_note_items_id'))

    op.drop_table('debit_note_items')
    with op.batch_alter_table('credit_note_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_credit_note_items_id'))

    op.drop_table('credit_note_items')
    with op.batch_alter_table('bom_components', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_bom_components_organization_id'))
        batch_op.drop_index(batch_op.f('ix_bom_components_id'))
        batch_op.drop_index('idx_bom_comp_org_item')
        batch_op.drop_index('idx_bom_comp_org_bom')

    op.drop_table('bom_components')
    with op.batch_alter_table('vendor_files', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_vendor_files_organization_id'))
        batch_op.drop_index(batch_op.f('ix_vendor_files_id'))
        batch_op.drop_index('idx_vendor_file_org_vendor')

    op.drop_table('vendor_files')
    with op.batch_alter_table('user_service_roles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_service_roles_id'))
        batch_op.drop_index('idx_user_service_role_user')
        batch_op.drop_index('idx_user_service_role_role')
        batch_op.drop_index('idx_user_service_role_active')

    op.drop_table('user_service_roles')
    with op.batch_alter_table('tickets', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tickets_ticket_number'))
        batch_op.drop_index(batch_op.f('ix_tickets_organization_id'))
        batch_op.drop_index(batch_op.f('ix_tickets_id'))
        batch_op.drop_index('idx_ticket_org_type')
        batch_op.drop_index('idx_ticket_org_status')
        batch_op.drop_index('idx_ticket_org_priority')
        batch_op.drop_index('idx_ticket_org_customer')
        batch_op.drop_index('idx_ticket_org_assigned')
        batch_op.drop_index('idx_ticket_due_date')
        batch_op.drop_index('idx_ticket_created_at')

    op.drop_table('tickets')
    with op.batch_alter_table('stock', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_stock_organization_id'))
        batch_op.drop_index(batch_op.f('ix_stock_id'))
        batch_op.drop_index('idx_stock_org_product')
        batch_op.drop_index('idx_stock_org_location')

    op.drop_table('stock')
    with op.batch_alter_table('sla_policies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sla_policies_organization_id'))
        batch_op.drop_index(batch_op.f('ix_sla_policies_id'))
        batch_op.drop_index('idx_sla_policy_ticket_type')
        batch_op.drop_index('idx_sla_policy_priority')
        batch_op.drop_index('idx_sla_policy_org_active')
        batch_op.drop_index('idx_sla_policy_default')

    op.drop_table('sla_policies')
    with op.batch_alter_table('service_role_permissions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_service_role_permissions_id'))
        batch_op.drop_index('idx_service_role_permission_role')
        batch_op.drop_index('idx_service_role_permission_permission')

    op.drop_table('service_role_permissions')
    with op.batch_alter_table('sales_orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sales_orders_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_sales_orders_organization_id'))
        batch_op.drop_index(batch_op.f('ix_sales_orders_id'))
        batch_op.drop_index('idx_so_org_status')
        batch_op.drop_index('idx_so_org_date')
        batch_op.drop_index('idx_so_org_customer')

    op.drop_table('sales_orders')
    with op.batch_alter_table('receipt_vouchers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_receipt_vouchers_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_receipt_vouchers_organization_id'))
        batch_op.drop_index(batch_op.f('ix_receipt_vouchers_id'))
        batch_op.drop_index('idx_rv_org_date')
        batch_op.drop_index('idx_rv_org_customer')

    op.drop_table('receipt_vouchers')
    with op.batch_alter_table('quotations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_quotations_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_quotations_organization_id'))
        batch_op.drop_index(batch_op.f('ix_quotations_id'))
        batch_op.drop_index('idx_quotation_org_date')
        batch_op.drop_index('idx_quotation_org_customer')

    op.drop_table('quotations')
    with op.batch_alter_table('purchase_orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_purchase_orders_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_purchase_orders_organization_id'))
        batch_op.drop_index(batch_op.f('ix_purchase_orders_id'))
        batch_op.drop_index('idx_po_org_vendor')
        batch_op.drop_index('idx_po_org_status')
        batch_op.drop_index('idx_po_org_date')

    op.drop_table('purchase_orders')
    with op.batch_alter_table('proforma_invoices', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_proforma_invoices_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_proforma_invoices_organization_id'))
        batch_op.drop_index(batch_op.f('ix_proforma_invoices_id'))
        batch_op.drop_index('idx_pi_org_date')
        batch_op.drop_index('idx_pi_org_customer')

    op.drop_table('proforma_invoices')
    with op.batch_alter_table('product_files', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_product_files_organization_id'))
        batch_op.drop_index(batch_op.f('ix_product_files_id'))
        batch_op.drop_index('idx_product_file_org_product')

    op.drop_table('product_files')
    with op.batch_alter_table('payment_vouchers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payment_vouchers_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_payment_vouchers_organization_id'))
        batch_op.drop_index(batch_op.f('ix_payment_vouchers_id'))
        batch_op.drop_index('idx_pv_payment_org_vendor')
        batch_op.drop_index('idx_pv_payment_org_date')

    op.drop_table('payment_vouchers')
    with op.batch_alter_table('notification_templates', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notification_templates_organization_id'))
        batch_op.drop_index(batch_op.f('ix_notification_templates_name'))
        batch_op.drop_index(batch_op.f('ix_notification_templates_id'))
        batch_op.drop_index('idx_notification_template_org_type')
        batch_op.drop_index('idx_notification_template_org_channel')

    op.drop_table('notification_templates')
    with op.batch_alter_table('journal_vouchers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_journal_vouchers_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_journal_vouchers_organization_id'))
        batch_op.drop_index(batch_op.f('ix_journal_vouchers_id'))
        batch_op.drop_index('idx_journal_org_date')

    op.drop_table('journal_vouchers')
    with op.batch_alter_table('inter_department_vouchers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_inter_department_vouchers_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_inter_department_vouchers_organization_id'))
        batch_op.drop_index(batch_op.f('ix_inter_department_vouchers_id'))
        batch_op.drop_index('idx_idv_org_to_dept')
        batch_op.drop_index('idx_idv_org_from_dept')
        batch_op.drop_index('idx_idv_org_date')

    op.drop_table('inter_department_vouchers')
    with op.batch_alter_table('debit_notes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_debit_notes_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_debit_notes_organization_id'))
        batch_op.drop_index(batch_op.f('ix_debit_notes_id'))
        batch_op.drop_index('idx_dn_org_vendor')
        batch_op.drop_index('idx_dn_org_date')
        batch_op.drop_index('idx_dn_org_customer')

    op.drop_table('debit_notes')
    with op.batch_alter_table('customer_segments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_customer_segments_organization_id'))
        batch_op.drop_index(batch_op.f('ix_customer_segments_id'))
        batch_op.drop_index('idx_customer_segment_org_customer')
        batch_op.drop_index('idx_customer_segment_name_active')
        batch_op.drop_index('idx_customer_segment_assigned_date')

    op.drop_table('customer_segments')
    with op.batch_alter_table('customer_interactions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_customer_interactions_organization_id'))
        batch_op.drop_index(batch_op.f('ix_customer_interactions_id'))
        batch_op.drop_index('idx_customer_interaction_type_status')
        batch_op.drop_index('idx_customer_interaction_org_customer')
        batch_op.drop_index('idx_customer_interaction_date')

    op.drop_table('customer_interactions')
    with op.batch_alter_table('customer_files', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_customer_files_organization_id'))
        batch_op.drop_index(batch_op.f('ix_customer_files_id'))
        batch_op.drop_index('idx_customer_file_org_customer')

    op.drop_table('customer_files')
    with op.batch_alter_table('credit_notes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_credit_notes_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_credit_notes_organization_id'))
        batch_op.drop_index(batch_op.f('ix_credit_notes_id'))
        batch_op.drop_index('idx_cn_org_vendor')
        batch_op.drop_index('idx_cn_org_date')
        batch_op.drop_index('idx_cn_org_customer')

    op.drop_table('credit_notes')
    with op.batch_alter_table('contra_vouchers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_contra_vouchers_voucher_number'))
        batch_op.drop_index(batch_op.f('ix_contra_vouchers_organization_id'))
        batch_op.drop_index(batch_op.f('ix_contra_vouchers_id'))
        batch_op.drop_index('idx_contra_org_to_account')
        batch_op.drop_index('idx_contra_org_from_account')
        batch_op.drop_index('idx_contra_org_date')

    op.drop_table('contra_vouchers')
    with op.batch_alter_table('bill_of_materials', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_bill_of_materials_organization_id'))
        batch_op.drop_index(batch_op.f('ix_bill_of_materials_id'))
        batch_op.drop_index('idx_bom_org_output')
        batch_op.drop_index('idx_bom_org_created')
        batch_op.drop_index('idx_bom_org_active')

    op.drop_table('bill_of_materials')
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_audit_logs_organization_id'))
        batch_op.drop_index(batch_op.f('ix_audit_logs_id'))
        batch_op.drop_index('idx_audit_org_timestamp')
        batch_op.drop_index('idx_audit_org_table_action')

    op.drop_table('audit_logs')
    with op.batch_alter_table('vendors', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_vendors_organization_id'))
        batch_op.drop_index(batch_op.f('ix_vendors_name'))
        batch_op.drop_index(batch_op.f('ix_vendors_id'))
        batch_op.drop_index('idx_vendor_org_name')
        batch_op.drop_index('idx_vendor_org_active')

    op.drop_table('vendors')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_supabase_uuid'))
        batch_op.drop_index(batch_op.f('ix_users_organization_id'))
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index('idx_user_org_username')
        batch_op.drop_index('idx_user_org_email')
        batch_op.drop_index('idx_user_org_active')

    op.drop_table('users')
    with op.batch_alter_table('service_roles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_service_roles_organization_id'))
        batch_op.drop_index(batch_op.f('ix_service_roles_id'))
        batch_op.drop_index('idx_service_role_org_active')

    op.drop_table('service_roles')
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_products_organization_id'))
        batch_op.drop_index(batch_op.f('ix_products_name'))
        batch_op.drop_index(batch_op.f('ix_products_id'))
        batch_op.drop_index('idx_product_org_name')
        batch_op.drop_index('idx_product_org_hsn')
        batch_op.drop_index('idx_product_org_active')

    op.drop_table('products')
    with op.batch_alter_table('payment_terms', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payment_terms_organization_id'))
        batch_op.drop_index(batch_op.f('ix_payment_terms_id'))
        batch_op.drop_index('idx_payment_term_org_name')

    op.drop_table('payment_terms')
    with op.batch_alter_table('notification_preferences', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notification_preferences_organization_id'))
        batch_op.drop_index(batch_op.f('ix_notification_preferences_id'))
        batch_op.drop_index('idx_notification_pref_org_subject')

    op.drop_table('notification_preferences')
    with op.batch_alter_table('email_notifications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_email_notifications_organization_id'))
        batch_op.drop_index(batch_op.f('ix_email_notifications_id'))
        batch_op.drop_index('idx_email_org_status')

    op.drop_table('email_notifications')
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_customers_organization_id'))
        batch_op.drop_index(batch_op.f('ix_customers_name'))
        batch_op.drop_index(batch_op.f('ix_customers_id'))
        batch_op.drop_index('idx_customer_org_name')
        batch_op.drop_index('idx_customer_org_active')

    op.drop_table('customers')
    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_companies_organization_id'))
        batch_op.drop_index(batch_op.f('ix_companies_id'))
        batch_op.drop_index('idx_company_org_name')

    op.drop_table('companies')
    with op.batch_alter_table('service_permissions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_service_permissions_name'))
        batch_op.drop_index(batch_op.f('ix_service_permissions_module'))
        batch_op.drop_index(batch_op.f('ix_service_permissions_id'))
        batch_op.drop_index(batch_op.f('ix_service_permissions_action'))
        batch_op.drop_index('idx_service_permission_module_action')

    op.drop_table('service_permissions')
    with op.batch_alter_table('platform_users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_platform_users_id'))
        batch_op.drop_index(batch_op.f('ix_platform_users_email'))
        batch_op.drop_index('idx_platform_user_email')
        batch_op.drop_index('idx_platform_user_active')

    op.drop_table('platform_users')
    with op.batch_alter_table('otp_verifications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_otp_verifications_id'))
        batch_op.drop_index(batch_op.f('ix_otp_verifications_email'))
        batch_op.drop_index('idx_otp_expires')
        batch_op.drop_index('idx_otp_email_purpose')

    op.drop_table('otp_verifications')
    with op.batch_alter_table('organizations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_organizations_subdomain'))
        batch_op.drop_index(batch_op.f('ix_organizations_org_code'))
        batch_op.drop_index(batch_op.f('ix_organizations_name'))
        batch_op.drop_index(batch_op.f('ix_organizations_id'))
        batch_op.drop_index('idx_org_status_subdomain')

    op.drop_table('organizations')
    # ### end Alembic commands ###