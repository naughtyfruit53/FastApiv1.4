"""Add InstallationTask and CompletionRecord models

Revision ID: 93d5f713bc9e
Revises: 5d6af8fe50a8
Create Date: 2025-08-23 10:36:43.996328

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '93d5f713bc9e'
down_revision = '5d6af8fe50a8'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('completion_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('installation_job_id', sa.Integer(), nullable=False),
    sa.Column('completion_status', sa.String(), nullable=False),
    sa.Column('completed_by_id', sa.Integer(), nullable=False),
    sa.Column('completion_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('actual_start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_duration_minutes', sa.Integer(), nullable=True),
    sa.Column('work_performed', sa.Text(), nullable=False),
    sa.Column('issues_encountered', sa.Text(), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('materials_used', sa.Text(), nullable=True),
    sa.Column('parts_replaced', sa.Text(), nullable=True),
    sa.Column('quality_check_passed', sa.Boolean(), nullable=False),
    sa.Column('verification_notes', sa.Text(), nullable=True),
    sa.Column('photos_attached', sa.Boolean(), nullable=False),
    sa.Column('customer_present', sa.Boolean(), nullable=False),
    sa.Column('customer_signature_received', sa.Boolean(), nullable=False),
    sa.Column('customer_feedback_notes', sa.Text(), nullable=True),
    sa.Column('customer_rating', sa.Integer(), nullable=True),
    sa.Column('follow_up_required', sa.Boolean(), nullable=False),
    sa.Column('follow_up_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('follow_up_notes', sa.Text(), nullable=True),
    sa.Column('feedback_request_sent', sa.Boolean(), nullable=False),
    sa.Column('feedback_request_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['completed_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['installation_job_id'], ['installation_jobs.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('installation_job_id')
    )
    with op.batch_alter_table('completion_records', schema=None) as batch_op:
        batch_op.create_index('idx_completion_record_completed_by', ['completed_by_id'], unique=False)
        batch_op.create_index('idx_completion_record_completion_date', ['completion_date'], unique=False)
        batch_op.create_index('idx_completion_record_feedback_sent', ['feedback_request_sent'], unique=False)
        batch_op.create_index('idx_completion_record_follow_up', ['follow_up_required', 'follow_up_date'], unique=False)
        batch_op.create_index('idx_completion_record_org_job', ['organization_id', 'installation_job_id'], unique=False)
        batch_op.create_index('idx_completion_record_status', ['completion_status'], unique=False)
        batch_op.create_index(batch_op.f('ix_completion_records_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_completion_records_organization_id'), ['organization_id'], unique=False)

    op.create_table('installation_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('installation_job_id', sa.Integer(), nullable=False),
    sa.Column('task_number', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('priority', sa.String(), nullable=False),
    sa.Column('estimated_duration_minutes', sa.Integer(), nullable=True),
    sa.Column('sequence_order', sa.Integer(), nullable=False),
    sa.Column('assigned_technician_id', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('work_notes', sa.Text(), nullable=True),
    sa.Column('completion_notes', sa.Text(), nullable=True),
    sa.Column('depends_on_task_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['assigned_technician_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['depends_on_task_id'], ['installation_tasks.id'], ),
    sa.ForeignKeyConstraint(['installation_job_id'], ['installation_jobs.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'task_number', name='uq_installation_task_org_number')
    )
    with op.batch_alter_table('installation_tasks', schema=None) as batch_op:
        batch_op.create_index('idx_installation_task_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_installation_task_org_job', ['organization_id', 'installation_job_id'], unique=False)
        batch_op.create_index('idx_installation_task_sequence', ['installation_job_id', 'sequence_order'], unique=False)
        batch_op.create_index('idx_installation_task_status', ['status'], unique=False)
        batch_op.create_index('idx_installation_task_technician', ['assigned_technician_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_installation_tasks_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_installation_tasks_organization_id'), ['organization_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_installation_tasks_task_number'), ['task_number'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('installation_tasks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_installation_tasks_task_number'))
        batch_op.drop_index(batch_op.f('ix_installation_tasks_organization_id'))
        batch_op.drop_index(batch_op.f('ix_installation_tasks_id'))
        batch_op.drop_index('idx_installation_task_technician')
        batch_op.drop_index('idx_installation_task_status')
        batch_op.drop_index('idx_installation_task_sequence')
        batch_op.drop_index('idx_installation_task_org_job')
        batch_op.drop_index('idx_installation_task_created_at')

    op.drop_table('installation_tasks')
    with op.batch_alter_table('completion_records', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_completion_records_organization_id'))
        batch_op.drop_index(batch_op.f('ix_completion_records_id'))
        batch_op.drop_index('idx_completion_record_status')
        batch_op.drop_index('idx_completion_record_org_job')
        batch_op.drop_index('idx_completion_record_follow_up')
        batch_op.drop_index('idx_completion_record_feedback_sent')
        batch_op.drop_index('idx_completion_record_completion_date')
        batch_op.drop_index('idx_completion_record_completed_by')

    op.drop_table('completion_records')
    # ### end Alembic commands ###