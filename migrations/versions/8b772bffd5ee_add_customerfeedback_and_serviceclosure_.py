"""Add CustomerFeedback and ServiceClosure models for feedback workflow

Revision ID: 8b772bffd5ee
Revises: 93d5f713bc9e
Create Date: 2025-08-23 11:43:09.223451

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8b772bffd5ee'
down_revision = '93d5f713bc9e'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customer_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('installation_job_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('completion_record_id', sa.Integer(), nullable=True),
    sa.Column('overall_rating', sa.Integer(), nullable=False),
    sa.Column('service_quality_rating', sa.Integer(), nullable=True),
    sa.Column('technician_rating', sa.Integer(), nullable=True),
    sa.Column('timeliness_rating', sa.Integer(), nullable=True),
    sa.Column('communication_rating', sa.Integer(), nullable=True),
    sa.Column('feedback_comments', sa.Text(), nullable=True),
    sa.Column('improvement_suggestions', sa.Text(), nullable=True),
    sa.Column('survey_responses', sa.Text(), nullable=True),
    sa.Column('would_recommend', sa.Boolean(), nullable=True),
    sa.Column('satisfaction_level', sa.String(), nullable=True),
    sa.Column('follow_up_preferred', sa.Boolean(), nullable=False),
    sa.Column('preferred_contact_method', sa.String(), nullable=True),
    sa.Column('feedback_status', sa.String(), nullable=False),
    sa.Column('reviewed_by_id', sa.Integer(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('response_notes', sa.Text(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['completion_record_id'], ['completion_records.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['installation_job_id'], ['installation_jobs.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('customer_feedback', schema=None) as batch_op:
        batch_op.create_index('idx_customer_feedback_completion', ['completion_record_id'], unique=False)
        batch_op.create_index('idx_customer_feedback_customer', ['customer_id'], unique=False)
        batch_op.create_index('idx_customer_feedback_org_job', ['organization_id', 'installation_job_id'], unique=False)
        batch_op.create_index('idx_customer_feedback_rating', ['overall_rating'], unique=False)
        batch_op.create_index('idx_customer_feedback_status', ['feedback_status'], unique=False)
        batch_op.create_index('idx_customer_feedback_submitted', ['submitted_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_customer_feedback_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_customer_feedback_organization_id'), ['organization_id'], unique=False)

    op.create_table('service_closures',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('installation_job_id', sa.Integer(), nullable=False),
    sa.Column('completion_record_id', sa.Integer(), nullable=True),
    sa.Column('customer_feedback_id', sa.Integer(), nullable=True),
    sa.Column('closure_status', sa.String(), nullable=False),
    sa.Column('closure_reason', sa.String(), nullable=True),
    sa.Column('closure_notes', sa.Text(), nullable=True),
    sa.Column('requires_manager_approval', sa.Boolean(), nullable=False),
    sa.Column('approved_by_id', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approval_notes', sa.Text(), nullable=True),
    sa.Column('closed_by_id', sa.Integer(), nullable=True),
    sa.Column('closed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('final_closure_notes', sa.Text(), nullable=True),
    sa.Column('feedback_received', sa.Boolean(), nullable=False),
    sa.Column('minimum_rating_met', sa.Boolean(), nullable=False),
    sa.Column('escalation_required', sa.Boolean(), nullable=False),
    sa.Column('escalation_reason', sa.Text(), nullable=True),
    sa.Column('reopened_count', sa.Integer(), nullable=False),
    sa.Column('last_reopened_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_reopened_by_id', sa.Integer(), nullable=True),
    sa.Column('reopening_reason', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['approved_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['closed_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['completion_record_id'], ['completion_records.id'], ),
    sa.ForeignKeyConstraint(['customer_feedback_id'], ['customer_feedback.id'], ),
    sa.ForeignKeyConstraint(['installation_job_id'], ['installation_jobs.id'], ),
    sa.ForeignKeyConstraint(['last_reopened_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('installation_job_id')
    )
    with op.batch_alter_table('service_closures', schema=None) as batch_op:
        batch_op.create_index('idx_service_closure_approval_required', ['requires_manager_approval'], unique=False)
        batch_op.create_index('idx_service_closure_approved_by', ['approved_by_id'], unique=False)
        batch_op.create_index('idx_service_closure_closed_by', ['closed_by_id'], unique=False)
        batch_op.create_index('idx_service_closure_completion', ['completion_record_id'], unique=False)
        batch_op.create_index('idx_service_closure_escalation', ['escalation_required'], unique=False)
        batch_op.create_index('idx_service_closure_feedback', ['customer_feedback_id'], unique=False)
        batch_op.create_index('idx_service_closure_feedback_received', ['feedback_received'], unique=False)
        batch_op.create_index('idx_service_closure_org_job', ['organization_id', 'installation_job_id'], unique=False)
        batch_op.create_index('idx_service_closure_status', ['closure_status'], unique=False)
        batch_op.create_index(batch_op.f('ix_service_closures_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_service_closures_organization_id'), ['organization_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('service_closures', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_service_closures_organization_id'))
        batch_op.drop_index(batch_op.f('ix_service_closures_id'))
        batch_op.drop_index('idx_service_closure_status')
        batch_op.drop_index('idx_service_closure_org_job')
        batch_op.drop_index('idx_service_closure_feedback_received')
        batch_op.drop_index('idx_service_closure_feedback')
        batch_op.drop_index('idx_service_closure_escalation')
        batch_op.drop_index('idx_service_closure_completion')
        batch_op.drop_index('idx_service_closure_closed_by')
        batch_op.drop_index('idx_service_closure_approved_by')
        batch_op.drop_index('idx_service_closure_approval_required')

    op.drop_table('service_closures')
    with op.batch_alter_table('customer_feedback', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_customer_feedback_organization_id'))
        batch_op.drop_index(batch_op.f('ix_customer_feedback_id'))
        batch_op.drop_index('idx_customer_feedback_submitted')
        batch_op.drop_index('idx_customer_feedback_status')
        batch_op.drop_index('idx_customer_feedback_rating')
        batch_op.drop_index('idx_customer_feedback_org_job')
        batch_op.drop_index('idx_customer_feedback_customer')
        batch_op.drop_index('idx_customer_feedback_completion')

    op.drop_table('customer_feedback')
    # ### end Alembic commands ###