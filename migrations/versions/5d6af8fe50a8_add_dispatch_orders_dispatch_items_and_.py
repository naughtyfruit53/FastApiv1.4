"""Add dispatch orders, dispatch items, and installation jobs models

Revision ID: 5d6af8fe50a8
Revises: 2d5258bc4090
Create Date: 2025-08-23 10:13:18.414896

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5d6af8fe50a8'
down_revision = '2d5258bc4090'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dispatch_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('order_number', sa.String(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('ticket_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('dispatch_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expected_delivery_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_delivery_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('delivery_address', sa.Text(), nullable=False),
    sa.Column('delivery_contact_person', sa.String(), nullable=True),
    sa.Column('delivery_contact_number', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('tracking_number', sa.String(), nullable=True),
    sa.Column('courier_name', sa.String(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'order_number', name='uq_dispatch_order_org_number')
    )
    with op.batch_alter_table('dispatch_orders', schema=None) as batch_op:
        batch_op.create_index('idx_dispatch_order_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_dispatch_order_delivery_date', ['expected_delivery_date'], unique=False)
        batch_op.create_index('idx_dispatch_order_dispatch_date', ['dispatch_date'], unique=False)
        batch_op.create_index('idx_dispatch_order_org_customer', ['organization_id', 'customer_id'], unique=False)
        batch_op.create_index('idx_dispatch_order_org_status', ['organization_id', 'status'], unique=False)
        batch_op.create_index('idx_dispatch_order_org_ticket', ['organization_id', 'ticket_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_dispatch_orders_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_dispatch_orders_order_number'), ['order_number'], unique=False)
        batch_op.create_index(batch_op.f('ix_dispatch_orders_organization_id'), ['organization_id'], unique=False)

    op.create_table('dispatch_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dispatch_order_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('serial_numbers', sa.Text(), nullable=True),
    sa.Column('batch_numbers', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['dispatch_order_id'], ['dispatch_orders.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('dispatch_items', schema=None) as batch_op:
        batch_op.create_index('idx_dispatch_item_order', ['dispatch_order_id'], unique=False)
        batch_op.create_index('idx_dispatch_item_product', ['product_id'], unique=False)
        batch_op.create_index('idx_dispatch_item_status', ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_dispatch_items_id'), ['id'], unique=False)

    op.create_table('installation_jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('job_number', sa.String(), nullable=False),
    sa.Column('dispatch_order_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('ticket_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('priority', sa.String(), nullable=False),
    sa.Column('scheduled_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('estimated_duration_hours', sa.Float(), nullable=True),
    sa.Column('actual_start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('assigned_technician_id', sa.Integer(), nullable=True),
    sa.Column('installation_address', sa.Text(), nullable=False),
    sa.Column('contact_person', sa.String(), nullable=True),
    sa.Column('contact_number', sa.String(), nullable=True),
    sa.Column('installation_notes', sa.Text(), nullable=True),
    sa.Column('completion_notes', sa.Text(), nullable=True),
    sa.Column('customer_feedback', sa.Text(), nullable=True),
    sa.Column('customer_rating', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['assigned_technician_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['dispatch_order_id'], ['dispatch_orders.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id', 'job_number', name='uq_installation_job_org_number')
    )
    with op.batch_alter_table('installation_jobs', schema=None) as batch_op:
        batch_op.create_index('idx_installation_job_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_installation_job_dispatch_order', ['dispatch_order_id'], unique=False)
        batch_op.create_index('idx_installation_job_org_customer', ['organization_id', 'customer_id'], unique=False)
        batch_op.create_index('idx_installation_job_org_status', ['organization_id', 'status'], unique=False)
        batch_op.create_index('idx_installation_job_org_technician', ['organization_id', 'assigned_technician_id'], unique=False)
        batch_op.create_index('idx_installation_job_priority', ['priority'], unique=False)
        batch_op.create_index('idx_installation_job_scheduled_date', ['scheduled_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_installation_jobs_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_installation_jobs_job_number'), ['job_number'], unique=False)
        batch_op.create_index(batch_op.f('ix_installation_jobs_organization_id'), ['organization_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('installation_jobs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_installation_jobs_organization_id'))
        batch_op.drop_index(batch_op.f('ix_installation_jobs_job_number'))
        batch_op.drop_index(batch_op.f('ix_installation_jobs_id'))
        batch_op.drop_index('idx_installation_job_scheduled_date')
        batch_op.drop_index('idx_installation_job_priority')
        batch_op.drop_index('idx_installation_job_org_technician')
        batch_op.drop_index('idx_installation_job_org_status')
        batch_op.drop_index('idx_installation_job_org_customer')
        batch_op.drop_index('idx_installation_job_dispatch_order')
        batch_op.drop_index('idx_installation_job_created_at')

    op.drop_table('installation_jobs')
    with op.batch_alter_table('dispatch_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_dispatch_items_id'))
        batch_op.drop_index('idx_dispatch_item_status')
        batch_op.drop_index('idx_dispatch_item_product')
        batch_op.drop_index('idx_dispatch_item_order')

    op.drop_table('dispatch_items')
    with op.batch_alter_table('dispatch_orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_dispatch_orders_organization_id'))
        batch_op.drop_index(batch_op.f('ix_dispatch_orders_order_number'))
        batch_op.drop_index(batch_op.f('ix_dispatch_orders_id'))
        batch_op.drop_index('idx_dispatch_order_org_ticket')
        batch_op.drop_index('idx_dispatch_order_org_status')
        batch_op.drop_index('idx_dispatch_order_org_customer')
        batch_op.drop_index('idx_dispatch_order_dispatch_date')
        batch_op.drop_index('idx_dispatch_order_delivery_date')
        batch_op.drop_index('idx_dispatch_order_created_at')

    op.drop_table('dispatch_orders')
    # ### end Alembic commands ###